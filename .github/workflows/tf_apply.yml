name: "Apply Tf Plan"
on:
  workflow_call:
    inputs:
        path:
            description: 'Specifies the path of the root terraform module.'
            required: true
            type: string
        tf_version:
            description: 'Specifies version of Terraform to use. e.g: 1.1.0 Default=latest.'
            required: false
            type: string
            default: latest
        tf_vars_file:
            description: 'Specifies the Terraform TFVARS file.'
            required: false
            type: string
        region:
            description: 'Specifies the deployment region for the aws infrastructure'
            required: true
            type: string
        repository:
            description: 'name of the infra repository'
            required: false
            type: string
    secrets:
        cli_config_credentials_token:
            description: 'cli config credentials token'
            required: true
        access_token:
            description: 'aws access key id'
            required: true
        secret_access_token:
            description: 'aws secret access key'
            required: true

jobs:
    Apply-plan:
        runs-on: ubuntu-latest
                   
        defaults: 
            run:
                shell: bash
                working-directory: ${{ inputs.path}}
        
        steps:
            - name: Checkout
              uses: actions/checkout@v3.5.3

            - name: setup terraform 
              uses: hashicorp/setup-terraform@v2.0.2
              with:
                terraform_version: ${{ inputs.tf_version }}
                cli_config_credentials_token: ${{ secrets.cli_config_credentials_token  }}
                terraform_wrapper: false
            
            - name: Terraform Init
              id: init
              run: terraform init
              
            - name: Terraform Validate
              id: validate
              run: terraform validate
    
            - name: Terraform Plan
              id: plan
              run: terraform plan
              continue-on-error: true
    
            - name: Terraform Plan Status
              if: steps.plan.outcome == 'failure'
              run: exit 1

            - name: Terraform Apply & Destroy
              id: apply-run
              run: |
               terraform apply -auto-approve
               terraform destroy -auto-approve
            
            
